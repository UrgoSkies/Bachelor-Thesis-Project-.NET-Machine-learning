from hyperopt import fmin, tpe, hp, STATUS_OK, Trials
import subprocess
import re

# ??????????? ??????? ??? ?????????? ?????? ? ??????
def train_and_evaluate(params):
    rank = int(params['rank'])
    iterations = int(params['iterations'])
    learning_rate = float(params['learning_rate'])
    lambda_ = float(params['lambda'])
    
    # ?????? ???????? ???????? ?????? ? ????????? ??????????????? ????? ????????? ????????? ??????
    result = subprocess.run(['dotnet', 'run', '--project', 'C:\\Users\\Rinald\\source\\repos\\mlv1\\mlv1', 
                             str(rank), str(iterations), str(learning_rate), str(lambda_)], 
                             capture_output=True, text=True)
    
    # ?????????? ???????? ??????? ?? ??????
    mae = float('inf')
    for line in result.stdout.split('\n'):
        if "Mean Absolute Error" in line:
            mae = float(re.search(r'Mean Absolute Error: ([\d\.]+)', line).group(1))
            break
    
    return {'loss': mae, 'status': STATUS_OK}

# ??????????? ???????????? ?????? ???????????????
space = {
    'rank': hp.quniform('rank', 10, 50, 5),
    'iterations': hp.quniform('iterations', 1000, 5000, 1000),
    'learning_rate': hp.loguniform('learning_rate', -5, -1),
    'lambda': hp.loguniform('lambda', -5, -1)
}

# ?????? ??????????? ???????????????
trials = Trials()
best = fmin(fn=train_and_evaluate,
            space=space,
            algo=tpe.suggest,
            max_evals=50,
            trials=trials)

print("?????? ??????????????:", best)
